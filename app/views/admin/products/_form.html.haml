#progress-bar.progress{:style => "display:none;"}
  .progress-bar.progress-bar-striped.active{:role => "progressbar", :style => "width: 0%"}
    %span#progress-bar-text.sr-only

= form_for ["admin", @product], multipart: true do |f|
  = errors_for @product, true
  .row
    .col-sm-1
    .col-sm-10
      .form-group
        = f.label :name
        = f.text_field :name, class: 'form-control'
      .form-group
        = f.label :price
        .input-group
          .input-group-addon
            $
          = f.text_field :price, class: 'form-control'
      .form-group
        = f.label :tax
        .input-group
          .input-group-addon
            = "%"
          = f.text_field :tax, placeholder: 'Ex. 0.06 = 6%, input 0 for no tax', class: 'form-control'

      .form-group
        = f.label :description
        = f.text_area :description, class: 'form-control'
      %i
        markdown format (working on getting it to work with tables/br tags/hr tags):
        = link_to 'markdown syntax', 'https://caleorourke.gitbooks.io/redcarpet-syntax/content/index.html', target: :_blank
      %br
      .form-group
        = f.label :page_body
        = f.cktext_area :page_body, cols: 40, ckeditor: { toolbar: 'mini' }
      .form-group
        = f.label 'Amount in stock'
        = f.text_field :quantity, class: 'form-control'
      .form-group
        = f.label 'Max One Can Buy Per Order'
        = f.text_field :max_to_sell, class: 'form-control'
      %i Supported formats: .jpg .jpeg .gif .png .mp4
      .form-group
        = f.label :attachments
        = f.file_field :attachments, multiple: true, class: 'form-control'
    .col-sm-1
  .row
    .col-sm-1
    .col-sm-3
      .form-group
        = f.label 'Order Status'
        = f.select :check_status, options_for_select(Order::STATUSES.keys, selected: Order::PROGRESS_STATUS), {prompt: 'order status'}, {class: 'form-control selectpicker'}
      %i Used to hide product until an event is purchased
      %i hint: progress
    .col-sm-3
      .form-group
        = f.label 'Product Status'
        = f.select :status, options_for_select(Product::STATUSES.keys), {prompt: 'product status'}, {class: 'form-control selectpicker', required: true}
    .col-sm-1
      .form-group
        = f.label 'publish'
        = f.check_box :published
    .col-sm-3
      .form-group
        = f.submit 'Save', class: 'btn btn-success btn-lg btn-block', id: 'progress-bar', data: { disable_with: 'Uploading' }
        = link_to 'Back', admin_products_path, class: 'btn btn-danger btn-lg btn-block', data: { disable_with: 'Please wait' }
    .col-sm-1
