= nested_form_for ["admin",@order_product] do |f|
  = errors_for @order_product, false
  = f.label 'Order Status'
  = f.select :status, options_for_select(OrderProduct::STATUSES.keys, selected: @order_product.status), {prompt: 'status'}, {class: 'form-control selectpicker', required: true}
  .container-fluid
    .content-wrapper
      .form-group
        = f.fields_for :order_product_items do |opi_f|
          .row
            .col-sm-1
            .col-sm-6
              %h3= opi_f.object.product.name
              %br
                - if (opi_f.object.product.attachments.first.content_type.include? 'image')
                  = image_tag opi_f.object.product.attachments.first.url, height: "200"
                - else
                  = videojs_rails sources: { mp4: opi_f.object.product.attachments.first.url }, class: 'video'
            .col-sm-5
          %br
          .row
            .col-sm-1
            .col-sm-2= opi_f.label "Quantity:"
            .col-sm-4= opi_f.select :quantity, options_for_select((1..opi_f.object.product.max_to_sell).to_a, selected: "#{opi_f.object.quantity}"), {prompt: 'quantity'},{class: 'form-control selectpicker'}
            .col-sm-4= opi_f.link_to_remove "Remove Item", class: 'btn btn-danger btn-lg btn-block', data: { confirm: "Are you sure?" }
            .col-sm-1
      %br
      .actions.right
        = f.submit 'Update Order', class: 'btn btn-success btn-lg'
        = link_to 'Cancel', admin_orders_path, class: 'btn btn-danger btn-lg'
      %br
