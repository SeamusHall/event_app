= form_for order do |f|
  = errors_for order, true
  .container-fluid
    .content-wrapper
      .row
        .col-sm-8
          .row
            .col-sm-9
              %h3= order.event_item.event.name
              %h4
                Item:
                = order.event_item.description
            - if current_user.has_role?(:admin)
              .col-sm-3
                %br
                = f.select :status, options_for_select(Order::STATUSES.keys, selected: order.status), {prompt: 'status'}, {class: 'form-control selectpicker', required: true}
          %hr
          %strong Item Infomation
          %br
          .row
            .col-sm-4
            .col-sm-4
              .form-group
                = f.label :quantity
                = f.select :quantity, options_for_select((1..order.event_item.max_order).to_a, selected: order.quantity), {prompt: 'quantity'}, {class: 'form-control selectpicker', required: true}
            .col-sm-4
            -#
              .col-sm-4
                .form-group
                  = f.label 'check-in date'
                  = f.select :start_date, options_for_select((order.event_item.event.starts_on.to_date..order.event_item.event.ends_on.to_date).map{ |d| [d.strftime('%a, %b %d, %Y'), d.strftime('%Y-%m-%d')] }, selected: order.start_date.strftime('%Y-%m-%d')), {prompt: 'check-in date'}, {class: 'form-control selectpicker', required: true}
              .col-sm-4
                .form-group
                  = f.label 'check-out date'
                  = f.select :end_date, options_for_select((order.event_item.event.starts_on.to_date..order.event_item.event.ends_on.to_date).map{ |d| [d.strftime('%a, %b %d, %Y'), d.strftime('%Y-%m-%d')] }, selected: order.end_date.strftime('%Y-%m-%d')), {prompt: 'check-out date'}, {class: 'form-control selectpicker', required: true}
      %hr
        %br
      .actions.right
        = f.submit 'Update Order', class: 'btn btn-success btn-lg'
        = link_to 'Cancel', :back, class: 'btn btn-danger btn-lg'
